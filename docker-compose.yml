version: '3'
services:
  
  #PHP Service
  app:
    build:
      context: .
      dockerfile: dockerfiles/prod/php/Dockerfile
    image: php-app
    container_name: php-app
    restart: unless-stopped
    tty: true
    environment:
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: test
      DB_USER: user
      DB_PASSWORD: test
    working_dir: /var/www/html/api
    volumes:
      - ./backend/:/var/www/html/api
      - /var/www/html/api/vendor/
    networks:
      - app-network      

  #Nginx Service
  webserver:
    # image: nginx:alpine
    image: nginxserver
    container_name: webserver
    build:
      context: .
      dockerfile: dockerfiles/prod/nginx/Dockerfile
      target: production
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
    volumes:
      - ./backend/:/var/www/html/api
      - /var/www/html/api/vendor/
      - ./backend/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app-network

  #MySQL Service
  db:
    image: mysql:5.6
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: test
      MYSQL_ROOT_PASSWORD: test
      MYSQL_DATABASE: test
      MYSQL_USER: user
      MYSQL_PASSWORD: test
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql/
      - ./backend/my.cnf:/etc/mysql/my.cnf
      - ./backend/database.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local
